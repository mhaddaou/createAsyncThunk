{"ast":null,"code":"var _jsxFileName = \"/goinfre/mhaddaou/app/src/DataDisplay.tsx\",\n  _s = $RefreshSig$();\n// DataDisplay.tsx\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { fetchData, AppDispatch, AppThunk } from './store'; // Import the AppThunk type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataDisplay = () => {\n  _s();\n  const dispatch = useDispatch(); // Provide the AppDispatch type here\n  const {\n    data,\n    loading,\n    error\n  } = useSelector(state => state.data);\n  useEffect(() => {\n    dispatch(fetchData());\n  }, [dispatch]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Data: \", data]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_s(DataDisplay, \"JIa524IQrK2gj1bfKEUj9Oltays=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = DataDisplay;\nexport default DataDisplay;\nvar _c;\n$RefreshReg$(_c, \"DataDisplay\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","jsxDEV","_jsxDEV","DataDisplay","_s","dispatch","data","loading","error","state","fetchData","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/goinfre/mhaddaou/app/src/DataDisplay.tsx"],"sourcesContent":["// DataDisplay.tsx\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { fetchData, AppDispatch, AppThunk } from './store'; // Import the AppThunk type\nimport { RootState } from './reducers';\n\nconst DataDisplay: React.FC = () => {\n  const dispatch: AppDispatch = useDispatch(); // Provide the AppDispatch type here\n  const { data, loading, error } = useSelector((state: RootState) => state.data);\n\n  useEffect(() => {\n    dispatch(fetchData());\n  }, [dispatch]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>Error: {error}</div>;\n  }\n\n  return <div>Data: {data}</div>;\n};\n\nexport default DataDisplay;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAMC,QAAqB,GAAGN,WAAW,CAAC,CAAC,CAAC,CAAC;EAC7C,MAAM;IAAEO,IAAI;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGR,WAAW,CAAES,KAAgB,IAAKA,KAAK,CAACH,IAAI,CAAC;EAE9ER,SAAS,CAAC,MAAM;IACdO,QAAQ,CAACK,SAAS,CAAC,CAAC,CAAC;EACvB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,IAAIE,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAS,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAIP,KAAK,EAAE;IACT,oBAAON,OAAA;MAAAS,QAAA,GAAK,SAAO,EAACH,KAAK;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAClC;EAEA,oBAAOb,OAAA;IAAAS,QAAA,GAAK,QAAM,EAACL,IAAI;EAAA;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAChC,CAAC;AAACX,EAAA,CAjBID,WAAqB;EAAA,QACKJ,WAAW,EACRC,WAAW;AAAA;AAAAgB,EAAA,GAFxCb,WAAqB;AAmB3B,eAAeA,WAAW;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}