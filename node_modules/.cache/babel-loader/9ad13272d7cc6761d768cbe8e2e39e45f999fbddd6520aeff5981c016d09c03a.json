{"ast":null,"code":"// dataSlice.ts\nimport { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst initialState = {\n  data: '',\n  loading: false,\n  error: null\n};\nexport const fetchData = createAsyncThunk('data/fetchData', async () => {\n  const response = await axios.get('https://api.example.com/data');\n  return response.data;\n});\nconst dataSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchData.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchData.fulfilled, (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    }).addCase(fetchData.rejected, (state, action) => {\n      var _action$error$message;\n      state.loading = false;\n      state.error = (_action$error$message = action.error.message) !== null && _action$error$message !== void 0 ? _action$error$message : 'An error occurred.';\n    });\n  }\n});\nexport default dataSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","initialState","data","loading","error","fetchData","response","get","dataSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","_action$error$message","message","reducer"],"sources":["/goinfre/mhaddaou/app/src/dataSlice.ts"],"sourcesContent":["// dataSlice.ts\nimport { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\ninterface DataState {\n  data: string;\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: DataState = {\n  data: '',\n  loading: false,\n  error: null,\n};\n\nexport const fetchData = createAsyncThunk('data/fetchData', async () => {\n  const response = await axios.get('https://api.example.com/data');\n  return response.data;\n});\n\nconst dataSlice = createSlice({\n  name: 'data',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchData.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchData.fulfilled, (state, action: PayloadAction<string>) => {\n        state.loading = false;\n        state.data = action.payload;\n      })\n      .addCase(fetchData.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message ?? 'An error occurred.';\n      });\n  },\n});\n\nexport default dataSlice.reducer;\n"],"mappings":"AAAA;AACA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAC/E,OAAOC,KAAK,MAAM,OAAO;AAQzB,MAAMC,YAAuB,GAAG;EAC9BC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGN,gBAAgB,CAAC,gBAAgB,EAAE,YAAY;EACtE,MAAMO,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAG,CAAC,8BAA8B,CAAC;EAChE,OAAOD,QAAQ,CAACJ,IAAI;AACtB,CAAC,CAAC;AAEF,MAAMM,SAAS,GAAGV,WAAW,CAAC;EAC5BW,IAAI,EAAE,MAAM;EACZR,YAAY;EACZS,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACR,SAAS,CAACS,OAAO,EAAGC,KAAK,IAAK;MACrCA,KAAK,CAACZ,OAAO,GAAG,IAAI;MACpBY,KAAK,CAACX,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC,CACDS,OAAO,CAACR,SAAS,CAACW,SAAS,EAAE,CAACD,KAAK,EAAEE,MAA6B,KAAK;MACtEF,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACb,IAAI,GAAGe,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC,CACDL,OAAO,CAACR,SAAS,CAACc,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAAA,IAAAG,qBAAA;MAC9CL,KAAK,CAACZ,OAAO,GAAG,KAAK;MACrBY,KAAK,CAACX,KAAK,IAAAgB,qBAAA,GAAGH,MAAM,CAACb,KAAK,CAACiB,OAAO,cAAAD,qBAAA,cAAAA,qBAAA,GAAI,oBAAoB;IAC5D,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeZ,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}