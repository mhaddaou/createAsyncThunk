{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nconst initialState = {\n  data: [],\n  loading: false,\n  error: null\n};\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getAllPosts.pending, state => {\n      state.loading = true;\n      state.error = null;\n    });\n    builder.addCase(getAllPosts.fulfilled, (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    });\n    builder.addCase(getAllPosts.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    });\n  }\n});\nexport const {/* Other action creators */} = postsSlice.actions;\nexport default postsSlice.reducer;\nconst fetchPostsFromAPI = async () => {\n  // Simulated API response\n  return [{\n    id: 1,\n    title: 'Post 1',\n    content: 'Content of post 1'\n  }, {\n    id: 2,\n    title: 'Post 2',\n    content: 'Content of post 2'\n  }];\n};\nexport const getAllPosts = createAsyncThunk('posts/getAll', async () => {\n  try {\n    const response = await fetchPostsFromAPI();\n    return response;\n  } catch (error) {\n    throw new Error('Failed to fetch posts');\n  }\n});","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","data","loading","error","postsSlice","name","reducers","extraReducers","builder","addCase","getAllPosts","pending","state","fulfilled","action","payload","rejected","message","actions","reducer","fetchPostsFromAPI","id","title","content","response","Error"],"sources":["/goinfre/mhaddaou/app/src/FetchSlice.ts"],"sourcesContent":["\n\nimport { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\n\ninterface Post {\n  id: number;\n  title: string;\n  content: string;\n}\n\nexport interface PostsState {\n  data: Post[];\n  loading: boolean;\n  error: string | null | undefined ;\n}\n\nconst initialState: PostsState = {\n  data: [],\n  loading: false,\n  error: null,\n};\n\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState,\n  reducers: {\n    \n  },\n  extraReducers: (builder) => {\n    builder.addCase(getAllPosts.pending, (state) => {\n      state.loading = true;\n      state.error = null;\n    });\n\n    builder.addCase(getAllPosts.fulfilled, (state, action) => {\n      state.loading = false;\n      state.data = action.payload;\n    });\n\n    builder.addCase(getAllPosts.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    });\n  },\n});\n\n\nexport const { /* Other action creators */ } = postsSlice.actions;\n\n\nexport default postsSlice.reducer;\n\n\n\n\n\nconst fetchPostsFromAPI = async (): Promise<Post[]> => {\n  // Simulated API response\n  return [\n    { id: 1, title: 'Post 1', content: 'Content of post 1' },\n    { id: 2, title: 'Post 2', content: 'Content of post 2' },\n  \n  ];\n};\n\n\nexport const getAllPosts = createAsyncThunk('posts/getAll', async () => {\n  try {\n    const response = await fetchPostsFromAPI();\n    return response;\n  } catch (error) {\n    throw new Error('Failed to fetch posts');\n  }\n});\n"],"mappings":"AAEA,SAASA,WAAW,EAAiBC,gBAAgB,QAAQ,kBAAkB;AAc/E,MAAMC,YAAwB,GAAG;EAC/BC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,UAAU,GAAGN,WAAW,CAAC;EAC7BO,IAAI,EAAE,OAAO;EACbL,YAAY;EACZM,QAAQ,EAAE,CAEV,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACC,WAAW,CAACC,OAAO,EAAGC,KAAK,IAAK;MAC9CA,KAAK,CAACV,OAAO,GAAG,IAAI;MACpBU,KAAK,CAACT,KAAK,GAAG,IAAI;IACpB,CAAC,CAAC;IAEFK,OAAO,CAACC,OAAO,CAACC,WAAW,CAACG,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACxDF,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACX,IAAI,GAAGa,MAAM,CAACC,OAAO;IAC7B,CAAC,CAAC;IAEFP,OAAO,CAACC,OAAO,CAACC,WAAW,CAACM,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MACvDF,KAAK,CAACV,OAAO,GAAG,KAAK;MACrBU,KAAK,CAACT,KAAK,GAAGW,MAAM,CAACX,KAAK,CAACc,OAAO;IACpC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAGF,OAAO,MAAM,CAAE,4BAA6B,GAAGb,UAAU,CAACc,OAAO;AAGjE,eAAed,UAAU,CAACe,OAAO;AAMjC,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAA6B;EACrD;EACA,OAAO,CACL;IAAEC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAoB,CAAC,EACxD;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,QAAQ;IAAEC,OAAO,EAAE;EAAoB,CAAC,CAEzD;AACH,CAAC;AAGD,OAAO,MAAMb,WAAW,GAAGX,gBAAgB,CAAC,cAAc,EAAE,YAAY;EACtE,IAAI;IACF,MAAMyB,QAAQ,GAAG,MAAMJ,iBAAiB,CAAC,CAAC;IAC1C,OAAOI,QAAQ;EACjB,CAAC,CAAC,OAAOrB,KAAK,EAAE;IACd,MAAM,IAAIsB,KAAK,CAAC,uBAAuB,CAAC;EAC1C;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}